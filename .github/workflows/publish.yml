name: Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Release binary for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
            target_file: target/x86_64-unknown-linux-musl/release/{idl2json,yaml2candid}
            asset_name: idl2json-linux-x86_64
            make_target: musl-static
          - os: windows-latest
            name: windows
            target_file: target/release/{idl2json,yaml2candid}.exe
            asset_name: idl2json-windows-x86_64
            make_target: release
            rust: 1.60.0
          - os: macos-latest
            name: macos
            target_file: target/release/{idl2json,yaml2candid}
            asset_name: idl2json-macos-x86_64
            make_target: release
            rust: 1.60.0
          - os: ubuntu-latest
            name: arm
            target_file: target/arm-unknown-linux-gnueabihf/release/{idl2json,yaml2candid}
            asset_name: idl2json-arm_32
            make_target: unused
            rust: 1.60.0
    steps:
      - uses: actions/checkout@master

      - name: Install toolchain (Linux static)
        if: matrix.name == 'linux'
        uses: mariodfinity/rust-musl-action@master
        with:
          args: make ${{ matrix.make_target }}
      - name: Install toolchain (ARM)
        if: matrix.name == 'arm'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          target: arm-unknown-linux-gnueabihf
      - name: Install toolchain (Non-linux)
        if: matrix.name != 'linux' && matrix.name != 'arm'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Cross build
        if: matrix.name == 'arm'
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target arm-unknown-linux-gnueabihf --features static-ssl --release --locked

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.target_file }}
          file_glob: true
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
